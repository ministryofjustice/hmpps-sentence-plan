services:
  postgres:
    image: postgres:16
    networks:
      - hmpps
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
    tmpfs:
      - /var/lib/postgresql

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:2025-05-02.28494.105ac61
    networks:
      - hmpps
    healthcheck:
      test: ["CMD", "curl", "-f", "http://hmpps-auth:9090/auth/health"]
      interval: 5s
      retries: 100
    environment:
      SERVER_PORT: 9090
      SPRING_PROFILES_ACTIVE: dev
      APPLICATION_AUTHENTICATION_UI_ALLOWLIST: 0.0.0.0/0
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG

  sp-api:
    image: ghcr.io/ministryofjustice/hmpps-sentence-plan:${APP_VERSION:-latest}
    networks:
      - hmpps
    build:
      context: ../
    depends_on:
      - postgres
      - hmpps-auth
      - delius
    healthcheck:
      test: ["CMD", "curl", "-f", "http://sp-api:8080/health/ping"]
      interval: 5s
      retries: 100
    environment:
      SERVER_PORT: 8080
      DB_ENDPOINT: postgres:5432
      API_CLIENT_ID: sentence-plan-api-client
      API_CLIENT_SECRET: sentence-plan-api-client
      HMPPS_AUTH_BASE_URL: http://hmpps-auth:9090
      DELIUS_API_BASE_URL: http://delius:8080

  delius:
    image: wiremock/wiremock:latest
    networks:
      - hmpps
    volumes:
      - ../wiremock/delius:/home/wiremock/mappings
    entrypoint: [ "/docker-entrypoint.sh", "--global-response-templating", "--disable-gzip", "--verbose" ]

networks:
  hmpps:
